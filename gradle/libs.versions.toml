[versions]
agp = "8.2.1"
autoService = "1.0-rc4"
kotlin = "1.9.21"
ksp = "1.9.21-1.0.16"
kotlin-inject = "0.7.1"
detekt = "1.23.4"
kotlinPoet = "1.15.3"
kspTesting = "1.6.0"
koTest = "5.7.2"
stockMePublish = "1.0.0-SNAPSHOT"
di-runtime = "1.0.0"
di-compiler = "1.0.0"
dagger = "2.48"
kmp-convention = "1.0.0-SNAPSHOT"
stockMeLinter = "1.0.0-SNAPSHOT"

[libraries]
# Kotlin inject
auto-service = { module = "com.google.auto.service:auto-service", version.ref = "autoService" }
kotlin-gradle-plugin-api = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin-api", version.ref = "kotlin" }
kotlin-gradle-plugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
kotlin-inject-compiler = { group = "me.tatarka.inject", name = "kotlin-inject-compiler-ksp", version.ref = "kotlin-inject" }
kotlin-inject-runtime = { group = "me.tatarka.inject", name = "kotlin-inject-runtime", version.ref = "kotlin-inject" }

# Detekt
detekt-gradle-plugin = { module = "io.gitlab.arturbosch.detekt:detekt-gradle-plugin", version.ref = "detekt" }
detekt-ruleset-compiler = { module = "com.braisgabin.detekt:kotlin-compiler-wrapper", version = "0.0.4" }
detekt-ruleset-ktlint = { module = "io.gitlab.arturbosch.detekt:detekt-formatting", version.ref = "detekt" }
detekt-ruleset-compose = { module = "io.nlopez.compose.rules:detekt", version = "0.3.11" }

# Code gen
ksp-processor-api = { group = "com.google.devtools.ksp", name = "symbol-processing-api", version.ref = "ksp" }
kotlin-poet = { group = "com.squareup", name = "kotlinpoet-ksp", version.ref = "kotlinPoet" }
koTest = { group = "io.kotest", name = "kotest-runner-junit5", version.ref = "koTest" }
ksp-testing = { group = "com.github.tschuchortdev", name = "kotlin-compile-testing-ksp", version.ref = "kspTesting" }

# Gradle
kotlinCompilerEmbeddable = { module = "org.jetbrains.kotlin:kotlin-compiler", version.ref = "kotlin" }

# Core dependency
di-runtime = { group = "in.stock.me", name = "di-runtime", version.ref = "di-runtime" }
di-compiler = { group = "in.stock.me", name = "di-compiler", version.ref = "di-compiler" }

# Dagger
dagger = { group = "com.google.dagger", name = "dagger", version.ref = "dagger" }
dagger-compiler = { group = "com.google.dagger", name = "dagger-compiler", version.ref = "dagger" }

# Linting
stock-me-linter = { group = "in.stock.me", name = "linter", version.ref = "stockMeLinter" }


[plugins]
androidLibrary = { id = "com.android.library", version.ref = "agp" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
org-jetbrains-kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }
stock-me-publish = { id = "in.stock.me.publish", version.ref = "stockMePublish" }
kmp-convention = { id = "plugin.kmp.convention", version.ref = "kmp-convention" }
di-compiler = { id = "plugin.di.compiler", version.ref = "di-compiler" }
stock-me-linter = { id = "in.stock.me.linter", version.ref = "stockMeLinter" }